{"version":3,"sources":["source/components/header/styles/index.module.scss","source/bus/main/styles/styles.module.scss","source/elements/backToTop/styles.module.scss","source/components/layout/styles/index.module.scss","source/bus/latestFilms/types.js","source/bus/latestFilms/api/index.js","source/bus/latestFilms/api/config.js","source/bus/latestFilms/actions.js","source/components/header/index.js","source/components/header/hooks/useCurrentPage.js","source/components/footer/index.js","source/elements/backToTop/index.js","source/components/layout/index.js","source/bus/latestFilms/index.js","source/bus/latestFilms/hooks/useLatestFilms.js","source/pages/latestFilms/index.js","source/navigation/book.js","source/api/config.js","source/api/index.js","source/bus/popularFilms/types.js","source/bus/popularFilms/actions.js","source/bus/popularFilms/hooks/usePopularFilms.js","source/bus/popularFilms/hooks/usePopularFilmsFetch.js","source/navigation/history.js","source/elements/linkToFilm/index.js","source/bus/popularFilms/index.js","source/pages/popular-films/index.js","source/bus/topRatedFilms/types.js","source/bus/topRatedFilms/actions.js","source/bus/topRatedFilms/index.js","source/bus/topRatedFilms/customHooks/useTopRatedFilms.js","source/pages/topRatedFilms/index.js","source/bus/main/redux/types.js","source/bus/main/redux/actions.js","source/bus/main/index.js","source/pages/main/index.js","source/bus/film/types.js","source/bus/film/actions.js","source/bus/film/filmDescription/index.js","source/bus/film/filmStatistic/index.js","source/bus/film/recommendationFilms/index.js","source/bus/film/hooks/useRecommendationFilms.js","source/bus/film/similarFilms/index.js","source/bus/film/hooks/useSimilarFilms.js","source/bus/film/reviews/index.js","source/bus/film/reviews/hooks/useReviews.js","source/bus/film/index.js","source/bus/film/hooks/useInitFilm.js","source/pages/film/index.js","source/navigation/index.js","source/bus/main/redux/reducer.js","source/bus/popularFilms/reducer.js","source/bus/film/reducer.js","source/bus/topRatedFilms/reducer.js","source/bus/latestFilms/reducer.js","source/init/rootReducer.js","source/init/middleware.js","source/init/store.js","app.js","serviceWorker.js","index.js"],"names":["module","exports","types","Object","freeze","LATEST_FILMS_START_FETCHING","LATEST_FILMS_STOP_FETCHING","LATEST_FILMS_FETCHING_ERROR","LATEST_FILMS_FILLING","api","getLatestFilms","fetch","method","latestFilmsActions","startFetching","type","stopFetching","setFetchingError","error","payload","fillLatestFilms","fetchAsync","dispatch","a","response","status","json","data","Header","pathname","useLocation","appPages","indexOf","substring","useCurrentPage","pageKey","className","Styles","header","logo","nav","theme","mode","selectedKeys","Item","to","book","root","films","popularFilms","topRatedFilms","latestFilms","url","Footer","year","Date","getFullYear","style","textAlign","BackToTop","Layout","props","section","children","LatestFilms","useDispatch","useSelector","state","isLoading","useEffect","useLatestFilms","title","map","item","overview","poster_path","alt","src","width","release_date","key","id","filmsTabel","dataSource","columns","dataIndex","align","bordered","rowKey","Content","film","component","init","headers","getMovie","filmId","getSimilarMovies","getRecommendationsMovies","getReviewsToMovie","getPopularMovies","page","getTrendingMovies","time","movies","getTopRated","POPULAR_FILMS_START_FETCHING","POPULAR_FILMS_STOP_FETCHING","POPULAR_FILMS_FILL","POPULAR_FILMS_SET_FETCHING_ERROR","POPULAR_FILMS_FETCH_ASYNC","popularFilmsActions","fill","usePopularFilms","useState","currentPage","setCurrentPage","isFetching","usePopularFilmsFetch","_setCurrentPage","history","createBrowserHistory","LinkToFilm","filmName","PopularFilms","render","path","text","record","pagination","position","pageSize","defaultCurrent","total","showSizeChanger","showQuickJumper","onChange","current","TOP_RATED_START_FETCHING","TOP_RATED_STOP_FETCHING","TOP_RATED_FILL","TOP_RATED_SET_FETCHING_ERROR","topRatedMoviesActions","fillData","getTopRatedAsync","dataFromApi","TopRatedFilms","topRated","useTopRatedFilms","length","imgSrc","index","genres","TRENDING_FILMS_START_FETCHING","TRENDING_FILMS_STOP_FETCHING","TRENDING_FILMS_FILL_STATE","TRENDING_FILMS_SET_FETCHING_ERROR","TRENDING_FILMS_FETCH_ASYNC","mainActions","fillState","statusText","TabPane","Tabs","Meta","Card","Main","trending","renderTrending","Array","isArray","trending_wrapper","hoverable","cover","description","release_year","overflow","h1","defaultActiveKey","centered","onTabClick","tab","START_FETCHING","STOP_FETCHING","SELECTED_FILM_FILL","REVIEWS_FILL","SIMILAR_FILMS_FILL","RECOMMENDATION_FILMS_FILL","MOST_POPULAR_FILM_FILL","SET_FETCHING_ERROR","FILM_CLEAN","GET_SELECTED_FILM","GET_REVIEWS","GET_SIMILAR_FILMS","GET_RECOMMENDATION_FILMS","GET_MOST_POPULAR_FILM","filmActions","selectedFilmFill","reviewsFill","similarFilmsFill","recommendationFilmsFill","mostPopularFilmFill","err","filmClean","getSelectedFilm","res","ok","Error","getReviews","getSimilarFilms","getRecommendationFilms","getMostPopuparFilm","FilmDescription","listOfGenres","join","justify","span","offset","preview","labelStyle","layout","column","label","vote_average","vote_count","FilmStatistic","gutter","precision","valueStyle","color","prefix","TrophyOutlined","value","Number","popularity","toLocaleString","DollarOutlined","budget","revenue","RecommendationFilms","topRecommendationFilms","recommendationFilms","mostPopularFilm","sortRecommendationFilms","sort","b","mostPopularity","sortFilms","slice","useRecommendationFilms","allowHalf","SimilarFilms","topSimilarFilms","sortSimilarFilms","similarFilms","useSimilarFilms","grid","renderItem","Reviews","reviews","useReviews","author","avatar","UserOutlined","content","Film","selectedFilm","getData","useCallback","useInitFilm","useParams","message","closable","size","Routes","exact","initialState","rootReducer","combineReducers","composeEnhancers","createLogger","duration","collapsed","colors","action","prevState","nextState","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","applyMiddleware","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,IAAM,sB,oBCApFD,EAAOC,QAAU,CAAC,iBAAmB,iCAAiC,GAAK,qB,oBCA3ED,EAAOC,QAAU,CAAC,cAAc,8B,oBCAhCD,EAAOC,QAAU,CAAC,QAAU,0B,sICDfC,EAAQC,OAAOC,OAAO,CAC/BC,4BAA6B,8BAC7BC,2BAA6B,6BAC7BC,4BAA6B,6BAC7BC,qBAA6B,yBCFpBC,EAAMN,OAAOC,OAAO,CACzBM,eAAgB,WACZ,OAAOC,MAAM,GAAD,OCJJ,wCDII,iBAAyB,CACjCC,OAAQ,WEFXC,EAAqBV,OAAOC,OAAO,CAE5CU,cAAe,WACX,MAAO,CACHC,KAAMb,EAAMG,8BAIpBW,aAAc,WACV,MAAO,CACHD,KAAMb,EAAMI,6BAIpBW,iBAAkB,SAAEC,GAChB,MAAO,CACHH,KAAMb,EAAMK,4BACZW,OAAO,EACPC,QAASD,IAIjBE,gBAAiB,SAAED,GACf,MAAO,CACHJ,KAAMb,EAAMM,qBACZW,QAASA,IAIjBE,WAAY,yDAAM,WAAQC,GAAR,qBAAAC,EAAA,6DACdD,EAAST,EAAmBC,iBADd,SAGSL,EAAIC,iBAHb,UAKW,OAFnBc,EAHQ,QAKAC,OALA,iCAMaD,EAASE,OANtB,gBAMFC,EANE,EAMFA,KAGRL,EAAUT,EAAmBO,gBAAiB,CAAEO,KATtC,wBAYJT,EAAQ,CACVO,OAAQD,EAASC,QAGrBH,EAAST,EAAmBI,iBAAkBC,IAhBpC,QAoBdI,EAAST,EAAmBG,gBApBd,4CAAN,yD,mECzBHY,EAAS,WAAO,IAAD,ECLE,WAAO,IAC3BC,EAAaC,cAAbD,SAEFE,EAAW,CACf,SAAU,IACV,iBAAkB,IAClB,mBAAoB,IACpB,gBAAiB,KAGnB,MAAiB,MAAbF,EACK,KAE6C,IAA9BA,EAASG,QAAQ,IAAK,GAKnCD,EAAS,GAAD,OAAIF,EAASI,UAAU,EAAGJ,EAASG,QAAQ,IAAK,MAFxDD,EAASF,GDVFK,GAAXC,EADmB,oBAG1B,OACE,eAAC,IAAOP,OAAR,CAAeQ,UAAWC,IAAOC,OAAjC,UACE,qBAAKF,UAAWC,IAAOE,OAEvB,eAAC,IAAD,CAAMH,UAAWC,IAAOG,IAAKC,MAAM,OAAOC,KAAK,aAAaC,aAAc,CAACR,GAA3E,UACE,cAAC,IAAKS,KAAN,UAAmB,cAAC,IAAD,CAAMC,GAAIC,EAAKC,KAAf,mBAAJ,KACf,cAAC,IAAKH,KAAN,UAAmB,cAAC,IAAD,CAAMC,GAAIC,EAAKE,MAAf,oBAAJ,KACf,cAAC,IAAKJ,KAAN,UAAmB,cAAC,IAAD,CAAMC,GAAIC,EAAKG,aAAf,4BAAJ,KACf,cAAC,IAAKL,KAAN,UAAmB,cAAC,IAAD,CAAMC,GAAIC,EAAKI,cAAf,8BAAJ,KACf,cAAC,IAAKN,KAAN,UAAmB,cAAC,IAAD,CAAMC,GAAIC,EAAKK,YAAYC,IAA3B,0BAAJ,YEjBVC,EAAS,WAEpB,IAAMC,GAAO,IAAIC,MAAOC,cAExB,OACE,eAAC,IAAOH,OAAR,CAAeI,MAAO,CAAEC,UAAW,UAAnC,2BAA2DJ,M,2BCHlDK,EAAY,WACvB,OACE,cAAC,IAAD,UACE,qBAAKvB,UAAWC,IAAO,eAAvB,mB,kBCHOuB,EAAS,SAACC,GACrB,OACE,cAAC,IAAD,CAAiBzB,UAAWC,IAAOyB,QAAnC,SAA6CD,EAAME,YCM1CC,EAAc,WAAO,IAAD,ECRH,WAE1B,IAAM1C,EAAW2C,cAFe,EAGUC,aAAY,SAACC,GAAD,OAAWA,EAAMhB,eAA/DiB,EAHwB,EAGxBA,UAAWlD,EAHa,EAGbA,MAAOiC,EAHM,EAGNA,YAM1B,OAJAkB,qBAAU,WACN/C,EAAST,EAAmBQ,gBAC7B,CAACC,IAEG,CACH8C,YACAlD,QACAiC,eDEAmB,GAHAF,EAHyB,EAGzBA,UACAjB,EAJyB,EAIzBA,YACAjC,EALyB,EAKzBA,MAGJ,GAAIkD,EACA,OAAO,cAAC,IAAD,CAAYG,MAAM,wHAG7B,GAAIrD,EACA,OAAO,cAAC,IAAD,CAAYqD,MAAM,wHAE7B,IAkEM5C,EAAOwB,GAAeA,EAAYqB,KAAI,SAACC,GAEzC,IAAMC,EAAWD,EAAKC,SAAL,UAAmBD,EAAKC,SAASzC,UAAU,EAAG,KAA9C,OAA0D,2LACrE0C,EAAcF,EAAKE,YAAc,qBAAKC,IAAKH,EAAKF,MAClDM,IAAKJ,EAAKE,YAAaG,MAAO,MAAU,uMACtCC,EAAeN,EAAKM,aAAeN,EAAKM,aAAe,wKAC7D,OAAO,2BACAN,GADP,IAEIO,IAAKP,EAAKQ,GACVP,WACAC,cACAI,oBAIFG,EAAa/B,IAAgBiB,GAC/B,cAAC,IAAD,CACIe,WAAYxD,EACZyD,QApFQ,CACZ,CAEIb,MAAO,uCACPc,UAAW,cACXL,IAAK,eAIT,CAEIT,MAAO,iCACPc,UAAW,QACXL,IAAK,QACLM,MAAO,SACPR,MAAO,OAIX,CAEIP,MAAO,gEACPc,UAAW,eACXL,IAAK,eACLM,MAAO,SACPR,MAAO,OAGX,CAEIP,MAAO,+DACPc,UAAW,UACXL,IAAK,UACLM,MAAO,SACPR,MAAO,OAGX,CAEIP,MAAO,uCACPc,UAAW,SACXL,IAAK,UAGT,CAEIT,MAAO,2EACPc,UAAW,aACXL,IAAK,aACLM,MAAO,SACPR,MAAO,OAGX,CAEIP,MAAO,4EACPc,UAAW,WACXL,IAAK,WACLM,MAAO,SA2BPC,UAAQ,EACRC,OAAO,QAKf,OACI,eAAC,EAAD,WACI,cAAC,EAAD,IACA,eAAC,IAAgBC,QAAjB,WACI,cAAC,IAAD,CAAYlB,MAAM,qUACjBW,EAED,cAAC,EAAD,OAGJ,cAAC,EAAD,QE9HClB,EAAc,WACvB,OACI,cAAC,EAAD,KCFKlB,EAAO3C,OAAOC,OAAO,CAC9B2C,KAAM,IACNE,aAAc,iBACdD,MAAO,SACPE,cAAe,mBACfwC,KAAM,iBAENvC,YAAa,CACTC,IAAK,gBACLuC,UAAW3B,K,SCXNjB,EAAO,wCACP6C,EAAO,CAClBhF,OAAQ,MACRiF,QAAS,CACP,eAAgB,qBCFPpF,EAAMN,OAAOC,OAAO,CAC/B0F,SAAU,CACRnF,MAAM,SAAD,oGAAC,EAAC,SAAAoF,GACL,OAAOpF,MAAM,GAAD,OAAIoC,EAAJ,0BAA0BgD,GAA1B,eAAwCH,QAGxDI,iBAAkB,CAChBrF,MAAM,SAAD,oGAAC,EAAC,SAAAoF,GACL,OAAOpF,MAAM,GAAD,OAAIoC,EAAJ,YAAYgD,EAAZ,2BAAkCH,QAGlDK,yBAA0B,CACxBtF,MAAM,SAAD,oGAAC,EAAC,SAAAoF,GACL,OAAOpF,MAAM,GAAD,OAAIoC,EAAJ,YAAYgD,EAAZ,mCAA0CH,QAG1DM,kBAAmB,CACjBvF,MAAM,SAAD,oGAAC,EAAC,SAAAoF,GACL,OAAOpF,MAAM,GAAD,OAAIoC,EAAJ,YAAYgD,EAAZ,2BAAkCH,QAGlDO,iBAAkB,CAChBxF,MAAM,SAAD,oGAAC,EAAC,SAACyF,GACN,OAAOzF,MAAM,GAAD,OAAIoC,EAAJ,gCAAgCqD,GAAhC,eAA4CR,QAG5DS,kBAAmB,CACjB1F,MAAM,SAAD,oGAAC,EAAC,SAAC2F,GACN,OAAO3F,MAAM,GAAD,OAAIoC,EAAJ,2BAA2BuD,GAA3B,eAAuCV,QAGvDW,OAAQ,CACNC,YAAa,SAACJ,GACZ,OAAOzF,MAAM,GAAD,OAAIoC,EAAJ,2BAA2BqD,GAA3B,eAAuCR,QCnC5C1F,EAAQC,OAAOC,OAAO,CACjCqG,6BAA8B,+BAC9BC,4BAA6B,8BAC7BC,mBAAoB,qBACpBC,iCAAkC,mCAClCC,0BAA2B,8BCFhBC,EAAsB3G,OAAOC,OAAO,CAC/CU,cAAe,WACb,MAAO,CAAEC,KAAMb,EAAMuG,+BAEvBzF,aAAc,WACZ,MAAO,CAAED,KAAMb,EAAMwG,8BAEvBK,KAAM,SAAC5F,GACL,MAAO,CAAEJ,KAAMb,EAAMyG,mBAAoBxF,YAE3CF,iBAAkB,SAACC,GACjB,MAAO,CACLH,KAAMb,EAAM0G,iCACZ1F,OAAO,EACPC,QAASD,IAIbG,WAAY,SAAC+E,GAAD,8CAAU,WAAO9E,GAAP,qBAAAC,EAAA,6DACpBD,EAASwF,EAAoBhG,iBADT,SAGGL,EAAI0F,iBAAiBxF,MAAMyF,GAH9B,UAKI,OAFlB5E,EAHc,QAKPC,OALO,iCAMKD,EAASE,OANd,gBAMVC,EANU,EAMVA,KAERL,EAASwF,EAAoBC,KAAKpF,IARhB,wBAUZT,EAAQ,CACZO,OAAQD,EAASC,QAGnBH,EAASwF,EAAoB7F,iBAAiBC,IAd5B,QAgBpBI,EAASwF,EAAoB9F,gBAhBT,4CAAV,yDClBDgG,EAAkB,WAAO,IAAD,EACGC,mBAAS,GADZ,mBAC5BC,EAD4B,KACfC,EADe,KAQnC,MAAO,CAAExF,KCPyB,SAACyE,GACnC,IAAM9E,EAAW2C,cAEjBI,qBAAU,WACR/C,EAASwF,EAAoBzF,WAAW+E,MACvC,CAAC9E,EAAU8E,IAL8B,MAORlC,aAAY,SAACC,GAAD,OAAWA,EAAMlB,gBAEjE,MAAO,CAAEtB,KATmC,EAOpCA,KAEOyF,WAT6B,EAO9BA,WAEalG,MATiB,EAOlBA,ODNTmG,CAAqBH,GAA9BvF,KAMOuF,cAAaI,gBAJJ,SAAClB,GACnBA,EAAO,GAAKA,GAAQ,KAAOe,EAAef,M,SENrCmB,EAAUC,cCCVC,EAAa,SAAC,GAAoB,IAAnBxC,EAAkB,EAAlBA,GAAIyC,EAAc,EAAdA,SAC9B,OACE,cAAC,IAAD,CAAM7E,GAAE,iBAAYoC,GAApB,SAA2ByC,KCOlBC,EAAe,WAAO,IAAD,EACeX,IAAvCrF,EADwB,EACxBA,KAAMuF,EADkB,EAClBA,YAAaI,EADK,EACLA,gBAErBlC,EAAU,CACd,CACEb,MAAO,SACPc,UAAW,cACXC,MAAO,SACPsC,OAAQ,SAAAC,GAAI,OAAI,cAAC,IAAD,CAAOhD,IAAKgD,EAAMjD,IAAI,SAASE,MAAO,QAExD,CACEP,MAAO,QACPc,UAAW,QACXC,MAAO,SACPR,MAAO,MACP8C,OAAQ,SAACE,EAAMC,GAAP,OAAkB,cAAC,EAAD,CAAY9C,GAAI8C,EAAO9C,GAAIyC,SAAUI,MAEjE,CACEvD,MAAO,aACPc,UAAW,aACXC,MAAO,SACPR,MAAO,OAET,CACEP,MAAO,aACPc,UAAW,aACXC,MAAO,SACPR,MAAO,MAET,CACEP,MAAO,eACPc,UAAW,eACXC,MAAO,SACPR,MAAO,MAET,CACEP,MAAO,WACPc,UAAW,WACXC,MAAO,WAQX,OACE,eAAC,EAAD,WAEE,cAAC,EAAD,IAEA,eAAC,IAAgBG,QAAjB,WACE,cAAC,IAAD,CACEL,QAASA,EACTD,WAAYxD,EACZqG,WAAY,CACVC,SAAU,CAAC,gBACXC,SAAU,GACVC,eAAgB,EAChBC,MAAO,IACPC,iBAAiB,EACjBC,iBAAiB,GAEnBC,SArBS,SAACP,GACZd,IAAgBc,EAAWQ,SAAWlB,EAAgBU,EAAWQ,UAqB/DjE,MAAO,kBACL,cAAC,IAAD,CACEnC,UAAU,mBACVmC,MAAM,mBAGVgB,UAAQ,EACRC,OAAO,OAET,cAAC,EAAD,OAGF,cAAC,EAAD,QCtFOmC,EAAe,kBAC1B,mCACE,cAAC,EAAD,OCJSzH,EAAQC,OAAOC,OAAO,CACjCqI,yBAA0B,2BAC1BC,wBAAyB,0BACzBC,eAAgB,iBAChBC,6BAA8B,iCCDnBC,EAAwB1I,OAAOC,OAAO,CACjDU,cAAe,WACb,MAAO,CACLC,KAAMb,EAAMuI,2BAGhBzH,aAAc,WACZ,MAAO,CACLD,KAAMb,EAAMwI,0BAGhBI,SAAU,SAAC3H,GACT,MAAO,CACLJ,KAAMb,EAAMyI,eACZxH,YAGJF,iBAAkB,SAACC,GACjB,MAAO,CACLH,KAAMb,EAAM0I,6BACZ1H,OAAO,EACPC,QAASD,IAIb6H,iBAAkB,SAACpH,GAAD,8CAAU,WAAOL,GAAP,mBAAAC,EAAA,6DAC1BD,EAASuH,EAAsB/H,iBADL,SAGHL,EAAI8F,OAAOC,YAAY7E,GAHpB,UAKF,OAFlBH,EAHoB,QAKbC,OALa,uBAMxBH,EAASuH,EAAsB5H,iBAAiBO,EAASC,SACzDH,EAASuH,EAAsB7H,gBAPP,2CAWQQ,EAASE,OAXjB,iBAWbsH,EAXa,EAWnBrH,KAEPL,EAASuH,EAAsBC,SAASE,IACxC1H,EAASuH,EAAsB7H,gBAdL,4CAAV,yDCdPiI,EAAgB,WAAO,IAAD,ECVH,WAC9B,IAAM3H,EAAW2C,cADmB,EAGAC,aAAY,SAACC,GAAD,OAAWA,EAAM+E,YAAzDvH,EAH4B,EAG5BA,KAAMyF,EAHsB,EAGtBA,WAAYlG,EAHU,EAGVA,MAHU,EAKE+F,mBAAS,GALX,mBAK7BC,EAL6B,KAKhBC,EALgB,KAWpC,OAJA9C,qBAAU,WACR/C,EAASuH,EAAsBE,iBAAiB7B,MAC/C,CAAC5F,EAAU4F,IAEP,CAAEvF,OAAMyF,aAAYlG,QAAOgG,cAAaC,kBDAkBgC,GAAzDxH,EADyB,EACzBA,KAAMyF,EADmB,EACnBA,WAAYlG,EADO,EACPA,MAAOgG,EADA,EACAA,YAAaC,EADb,EACaA,eAE9C,GAAIC,EACF,OAAO,cAAC,IAAD,CAAY7C,MAAM,qDAG3B,GAAIrD,EACF,OAAO,cAAC,IAAD,CAAYqD,MAAM,yCAG3B,KAAI,OAAC5C,QAAD,IAACA,OAAD,EAACA,EAAMyH,QACT,OAAO,cAAC,IAAD,CAAY7E,MAAM,sGAG3B,IAAMa,EAAU,CACd,CACEb,MAAO,uCACPc,UAAW,cACXC,MAAO,SACPsC,OAAQ,SAAAyB,GAAM,OAAI,cAAC,IAAD,CAAOxE,IAAKwE,EAAQzE,IAAI,YAE5C,CACEL,MAAO,mDACPc,UAAW,YACXP,MAAO,MACPQ,MAAO,SACPsC,OAAQ,SAAC0B,EAAO7E,GAAR,OAAiB,cAAC,IAAD,CAAM5B,GAAE,iBAAY4B,EAAKQ,IAAzB,SAAgCR,EAAKF,UAEhE,CACEA,MAAO,gEACPc,UAAW,eACXP,MAAO,KACPQ,MAAO,UAET,CACEf,MAAO,yLACPc,UAAW,aACXP,MAAO,KACPQ,MAAO,UAET,CACEf,MAAO,kFACPc,UAAW,eACXP,MAAO,KACPQ,MAAO,UAET,CACEf,MAAO,oGACPc,UAAW,YAEb,CACEd,MAAO,+KACPc,UAAW,SACXuC,OAAQ,SAAA2B,GAAM,OAAIA,EAAO/E,KAAI,SAACC,EAAM6E,GAClC,OAAO,4BAAgB7E,GAAR6E,SAKrB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAgB7D,QAAjB,WACE,cAAC,IAAD,CACE8C,SAAU,SAACP,GAAD,OAAgBb,EAAea,EAAWQ,UACpDpD,QAASA,EACTD,WAAYxD,EACZ4D,UAAQ,EACRC,OAAO,KACPwC,WAAY,CACVQ,QAAStB,EACTiB,eAAgB,EAChBD,SAAU,GACVG,iBAAiB,EACjBD,MAAO,OAGX,cAAC,EAAD,OAGF,cAAC,EAAD,QE7FOa,EAAgB,kBAC3B,mCACE,cAAC,EAAD,O,kBCJS/I,GAAQC,OAAOC,OAAO,CAC/BoJ,8BAA+B,gCAC/BC,6BAA8B,+BAC9BC,0BAA2B,4BAC3BC,kCAAmC,oCACnCC,2BAA4B,+BCD5BJ,GAIAtJ,GAJAsJ,8BACAC,GAGAvJ,GAHAuJ,6BACAC,GAEAxJ,GAFAwJ,0BACAC,GACAzJ,GADAyJ,kCAGSE,GAAc1J,OAAOC,OAAO,CACrCU,cAAe,WACZ,MAAO,CACHC,KAAMyI,KAGbxI,aAAc,WACV,MAAO,CACHD,KAAM0I,KAGdK,UAAW,SAAA3I,GACP,MAAO,CACHJ,KAAM2I,GACNvI,YAGRF,iBAAkB,SAAAC,GACd,MAAO,CACHH,KAAM4I,GACNzI,OAAO,EACPC,QAASD,IAGjBG,WAAY,SAACiF,GAAD,8CAAU,WAAOhF,GAAP,mBAAAC,EAAA,6DAElBD,EAASuI,GAAY/I,eAFH,SAGKL,EAAI4F,kBAAkB1F,MAAM2F,GAHjC,UAIK,OADjB9E,EAHY,QAINC,OAJM,iCAKKD,EAASE,OALd,OAKRC,EALQ,OAMdL,EAASuI,GAAYC,UAAUnI,IANjB,wBAQRT,EARQ,gBAQSM,EAASC,OARlB,cAQ8BD,EAASuI,YACrDzI,EAASuI,GAAY5I,iBAAiBC,IATxB,QAWlBI,EAASuI,GAAY7I,gBAXH,4CAAV,yD,oBCtBRgJ,GAAYC,KAAZD,QACAE,GAASC,KAATD,KAEKE,GAAO,WAClB,IAAM9I,EAAW2C,cAEjBI,qBAAU,WACR/C,EAASuI,GAAYxI,WAAW,UAC/B,CAACC,IAEJ,IAAM+I,EAAWnG,aAAY,SAAAC,GAAK,OAAIA,EAAMkG,YAAU1I,KAChD2I,EAAiB,SAAAD,GACrB,GAAIE,MAAMC,QAAQH,GAChB,OACE,qBAAKjI,UAAWC,IAAOoI,iBAAvB,SACGJ,EAAS7F,KAAI,SAACkB,EAAM4D,GACnB,OACE,cAAC,IAAD,CAA4BzG,GAAE,wBAAY6C,QAAZ,IAAYA,OAAZ,EAAYA,EAAMT,IAAhD,SACE,cAAC,KAAD,CACEV,MAAOmB,EAAKnB,MACZmG,WAAS,EACTjH,MAAO,CAAEqB,MAAO,KAChB6F,MAAO,qBAAK/F,IAAI,SACdC,IAAKa,EAAKf,cALd,SAOE,cAACuF,GAAD,CAAM3F,MAAOmB,EAAKhB,SAAUkG,YAAalF,EAAKmF,aAC5CpH,MAAO,CAAEqH,SAAU,eATzB,eAAmBxB,UAuB/B,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IAEA,eAAC,IAAgB7D,QAAjB,WACE,oBAAIrD,UAAWC,IAAO0I,GAAtB,6BACA,eAAC,KAAD,CAAMC,iBAAiB,MAAMC,UAAQ,EAACC,WAVlB,SAAClG,GACzB1D,EAASuI,GAAYxI,WAAW2D,KAS5B,UACE,cAACgF,GAAD,CAASmB,IAAI,0DAAb,SACGb,EAAeD,IADY,OAG9B,cAACL,GAAD,CAASmB,IAAI,oDAAb,SACGb,EAAeD,IADW,WAK/B,cAAC,EAAD,OAGF,cAAC,EAAD,QCpEOD,GAAO,kBAChB,cAAC,GAAD,K,oBCHSlK,GAAQC,OAAOC,OAAO,CAEjCgL,eAAgB,0BAChBC,cAAe,yBACfC,mBAAoB,8BACpBC,aAAc,wBACdC,mBAAoB,8BACpBC,0BAA2B,qCAC3BC,uBAAwB,kCACxBC,mBAAoB,8BACpBC,WAAY,sBAIZC,kBAAmB,6BACnBC,YAAa,uBACbC,kBAAmB,6BACnBC,yBAA0B,oCAC1BC,sBAAuB,mCCVZC,GAAc/L,OAAOC,OAAO,CAEvCU,cAAe,iBAAO,CAACC,KAAMb,GAAMkL,iBACnCpK,aAAc,iBAAO,CAACD,KAAMb,GAAMmL,gBAClCc,iBAAkB,SAAAhL,GAAO,MAAK,CAACJ,KAAMb,GAAMoL,mBAAoBnK,YAC/DiL,YAAa,SAAAjL,GAAO,MAAK,CAACJ,KAAMb,GAAMqL,aAAcpK,YACpDkL,iBAAkB,SAAAlL,GAAO,MAAK,CAACJ,KAAMb,GAAMsL,mBAAoBrK,YAC/DmL,wBAAyB,SAAAnL,GAAO,MAAK,CAACJ,KAAMb,GAAMuL,0BAA2BtK,YAC7EoL,oBAAqB,SAAApL,GAAO,MAAK,CAACJ,KAAMb,GAAMwL,uBAAwBvK,YACtEF,iBAAkB,SAAAuL,GAAG,MAAK,CAACzL,KAAMb,GAAMyL,mBAAoBzK,OAAO,EAAMC,QAASqL,IACjFC,UAAW,iBAAO,CAAC1L,KAAMb,GAAM0L,aAI/Bc,gBAAkB,SAAAzH,GAAE,8CAAI,WAAM3D,GAAN,mBAAAC,EAAA,sEAEpBD,EAAS4K,GAAYpL,iBAFD,SAGFL,EAAIqF,SAASnF,MAAMsE,GAHjB,WAGd0H,EAHc,QAIZC,GAJY,sBAKZ,IAAIC,MAAM,wBALE,uBAOGF,EAAIjL,OAPP,gBAOZC,EAPY,EAOZA,KAERL,EAAS4K,GAAYC,iBAAiBxK,IATlB,kDAYpBL,EAAS4K,GAAYjL,iBAAZ,OAZW,yBAcpBK,EAAS4K,GAAYlL,gBAdD,6EAAJ,uDAkBpB8L,WAAY,SAAA7H,GAAE,8CAAI,WAAM3D,GAAN,mBAAAC,EAAA,sEAEdD,EAAS4K,GAAYpL,iBAFP,SAGIL,EAAIyF,kBAAkBvF,MAAMsE,GAHhC,WAGR0H,EAHQ,QAINC,GAJM,sBAKN,IAAIC,MAAM,wBALJ,uBAOSF,EAAIjL,OAPb,gBAONC,EAPM,EAONA,KAERL,EAAS4K,GAAYE,YAAYzK,IATnB,kDAYdL,EAAS4K,GAAYjL,iBAAZ,OAZK,yBAcdK,EAAS4K,GAAYlL,gBAdP,6EAAJ,uDAkBd+L,gBAAkB,SAAA9H,GAAE,8CAAI,WAAM3D,GAAN,mBAAAC,EAAA,sEAEpBD,EAAS4K,GAAYpL,iBAFD,SAGFL,EAAIuF,iBAAiBrF,MAAMsE,GAHzB,WAGd0H,EAHc,QAIZC,GAJY,sBAKZ,IAAIC,MAAM,wBALE,uBAOGF,EAAIjL,OAPP,gBAOZC,EAPY,EAOZA,KAERL,EAAS4K,GAAYG,iBAAiB1K,IATlB,kDAYpBL,EAAS4K,GAAYjL,iBAAZ,OAZW,yBAcpBK,EAAS4K,GAAYlL,gBAdD,6EAAJ,uDAkBpBgM,uBAAwB,SAAA/H,GAAE,8CAAI,WAAM3D,GAAN,mBAAAC,EAAA,sEAE1BD,EAAS4K,GAAYpL,iBAFK,SAGRL,EAAIwF,yBAAyBtF,MAAMsE,GAH3B,WAGpB0H,EAHoB,QAIlBC,GAJkB,sBAKlB,IAAIC,MAAM,wBALQ,uBAOHF,EAAIjL,OAPD,gBAOlBC,EAPkB,EAOlBA,KAERL,EAAS4K,GAAYI,wBAAwB3K,IATnB,kDAY1BL,EAAS4K,GAAYjL,iBAAZ,OAZiB,yBAc1BK,EAAS4K,GAAYlL,gBAdK,6EAAJ,uDAkB1BiM,mBAAoB,yDAAM,WAAM3L,GAAN,mBAAAC,EAAA,sEAEtBD,EAAS4K,GAAYpL,iBAFC,SAGJL,EAAI0F,iBAAiBxF,MAAM,GAHvB,WAGhBgM,EAHgB,QAKdC,GALc,sBAMd,IAAIC,MAAM,wBANI,uBAQCF,EAAIjL,OARL,gBAQdC,EARc,EAQdA,KAERL,EAAS4K,GAAYK,oBAAoB5K,EAAK,KAVxB,kDAatBL,EAAS4K,GAAYjL,iBAAZ,OAba,yBAetBK,EAAS4K,GAAYlL,gBAfC,6EAAN,yD,4BC3FTkM,GAAkB,SAAC,GAAc,IAAD,UAAXxH,EAAW,EAAXA,KAE1ByH,GAAmB,OAAJzH,QAAI,IAAJA,OAAA,EAAAA,EAAM6D,OAAOH,QAAS,EAAtB,OAA0B1D,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAM6D,OAAO6D,KAAK,MAAQ,GACzE,OACE,qCACE,cAAC,KAAD,CAAKC,QAAQ,SAAS/H,MAAM,SAA5B,SACE,cAAC,KAAD,CAAKgI,KAAM,GAAIC,OAAQ,EAAvB,SACE,cAAC,IAAD,CACEC,SAAS,EACT5I,IAAG,OAAEc,QAAF,IAAEA,OAAF,EAAEA,EAAMnB,MACXM,IAAG,iBAAEa,QAAF,IAAEA,OAAF,EAAEA,EAAMf,mBAAR,QAAuB,GAC1BG,MAAO,UAIb,eAAC,KAAD,CACE2I,WAAY,CAAE,UAAa,QAC3BlJ,MAAK,OAAEmB,QAAF,IAAEA,OAAF,EAAEA,EAAMnB,MACbmJ,OAAO,aACPC,OAAQ,EAAGpI,UAAQ,EAJrB,UAKE,cAAC,KAAa3C,KAAd,CAAmB0K,KAAM,EAAGM,MAAM,SAAlC,SAA4CT,IAC5C,cAAC,KAAavK,KAAd,CAAmBgL,MAAM,SAAzB,gBAAoClI,QAApC,IAAoCA,OAApC,EAAoCA,EAAMjE,SAC1C,cAAC,KAAamB,KAAd,CAAmBgL,MAAM,eAAzB,0BAAyClI,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAMX,oBAA/C,QAA+D,KAC/D,cAAC,KAAanC,KAAd,CAAmBgL,MAAM,gBAAzB,0BAA0ClI,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAMmI,oBAAhD,QAAgE,KAChE,cAAC,KAAajL,KAAd,CAAmBgL,MAAM,aAAzB,0BAAuClI,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAMoI,kBAA7C,QAA2D,KAC3D,cAAC,KAAalL,KAAd,CAAmB0K,KAAM,EAAGM,MAAM,WAAlC,0BAA8ClI,QAA9C,IAA8CA,OAA9C,EAA8CA,EAAMhB,gBAApD,QAAgE,Y,8BCvB3DqJ,GAAgB,SAAC,GAAc,IAAZrI,EAAW,EAAXA,KAE9B,OACE,eAAC,KAAD,CAAKsI,OAAQ,GAAb,UACE,cAAC,KAAD,CAAKV,KAAM,EAAX,SACE,cAAC,KAAD,UACE,cAAC,KAAD,CACE/I,MAAM,aACN0J,UAAW,EACXC,WAAY,CAAEC,MAAO,WACrBC,OAAQ,cAACC,GAAA,EAAD,IACRC,MAAOC,OAAM,OAAC7I,QAAD,IAACA,OAAD,EAACA,EAAM8I,YAAYC,kBAAoB,SAG1D,cAAC,KAAD,CAAKnB,KAAM,EAAX,SACE,cAAC,KAAD,UACE,cAAC,KAAD,CACE/I,MAAM,SACN0J,UAAW,EACXC,WAAY,CAAEC,MAAO,WACrBC,OAAQ,cAACM,GAAA,EAAD,IACRJ,MAAOC,OAAM,OAAC7I,QAAD,IAACA,OAAD,EAACA,EAAMiJ,QAAQF,kBAAoB,SAGtD,cAAC,KAAD,CAAKnB,KAAM,EAAX,SACE,cAAC,KAAD,UACE,cAAC,KAAD,CACE/I,MAAM,UACN0J,UAAW,EACXC,WAAY,CAAEC,MAAO,WACrBC,OAAQ,cAACM,GAAA,EAAD,IACRJ,MAAOC,OAAM,OAAC7I,QAAD,IAACA,OAAD,EAACA,EAAMkJ,SAASH,kBAAoB,a,mBC/BhDI,GAAsB,WAAO,IAChCC,ECH4B,WAAO,IAAD,IACO5K,aAAY,SAAAC,GAAK,OAAIA,EAAMuB,QAApEqJ,EADkC,EAClCA,oBAAqBC,EADa,EACbA,gBAEvBC,EAA0BF,EAAoBG,MAAK,SAAC3N,EAAG4N,GAAJ,OAAUA,EAAEX,WAAajN,EAAEiN,cAE9EY,GAAgC,OAAfJ,QAAe,IAAfA,OAAA,EAAAA,EAAiBR,cAAjB,UAA+BS,EAAwB,UAAvD,aAA+B,EAA4BT,YAE5Ea,EAAYJ,EACfzK,KAAI,SAAAkB,GAAI,kCAASA,GAAT,IAAe8I,YAAiB,OAAJ9I,QAAI,IAAJA,OAAA,EAAAA,EAAM8I,YAAaY,EAAkB,OAI5E,MAAO,CAAEN,uBAFsBO,EAAUjG,OAAS,EAAIiG,EAAUC,MAAM,EAAG,GAA1C,aAAmDD,IDP/CE,GAA3BT,uBAEF1J,EAAU,CACd,CACEb,MAAO,SACPc,UAAW,cACXC,MAAO,SACPsC,OAAQ,SAAAC,GAAI,OAAI,cAAC,IAAD,CAAOhD,IAAKgD,EAAMjD,IAAI,SAASE,MAAO,QAExD,CACEP,MAAO,QACPc,UAAW,QACXC,MAAO,SACPR,MAAO,MACP8C,OAAQ,SAACE,EAAMC,GAAP,OAAkB,cAAC,IAAD,CAAMlF,GAAE,iBAAYkF,EAAO9C,IAA3B,SAAkC6C,MAE9D,CACEvD,MAAO,aACPc,UAAW,aACXC,MAAO,SACPR,MAAO,MACP8C,OAAQ,SAAA4G,GAAU,OAAI,cAAC,KAAD,CAAMgB,WAAS,EAAClB,MAAOE,MAE/C,CACEjK,MAAO,eACPc,UAAW,eACXC,MAAO,SACPR,MAAO,OAET,CACEP,MAAO,WACPc,UAAW,WACXC,MAAO,WAIX,OACE,cAAC,IAAD,CACEF,QAASA,EACTD,WAAY2J,EACZ9G,YAAY,EACZzD,MAAO,kBACL,cAAC,IAAD,CACEnC,UAAU,mBACVmC,MAAM,0BAGVgB,UAAQ,EACRC,OAAO,Q,+DE/CAiK,GAAe,WAAO,IACzBC,ECLqB,WAAO,IAG9BC,EAFmBzL,aAAY,SAAAC,GAAK,OAAIA,EAAMuB,QAA5CkK,aAE8BV,MAAK,SAAC3N,EAAG4N,GAAJ,OAAUA,EAAEX,WAAajN,EAAEiN,cAItE,MAAO,CAAEkB,gBAFeC,EAAiBvG,OAAS,EAAIuG,EAAiBL,MAAM,EAAG,GAAxD,aAAiEK,IDA7DE,GAApBH,gBACR,OACE,oCACE,+CACA,cAAC,KAAD,CACEI,KAAM,CAAE9B,OAAQ,GAAIL,OAAQ,GAC5BxI,WAAYuK,EACZK,WAAY,SAAAtL,GAAI,OACd,cAAC,IAAD,CAAM5B,GAAE,wBAAY4B,QAAZ,IAAYA,OAAZ,EAAYA,EAAMQ,IAA1B,SACE,cAAC,KAAKrC,KAAN,UACE,cAAC,KAAD,CACE8H,WAAS,EACTnG,MAAOE,EAAKF,MACZoG,MAAO,qBAAK/F,IAAKH,EAAKF,MAAOM,IAAKJ,EAAKE,cAHzC,SAKE,cAAC,KAAD,CAAMiG,YAAanG,EAAKC,SAAUH,MAAOE,EAAKM,4B,8BEhBjDiL,GAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,ECJd,WAAO,IAAD,EAEShJ,mBAAS,GAFlB,mBAK7B,MAAO,CACJC,YAN0B,KAO1BC,eAP0B,MDMW+I,GAAhChJ,EAF6B,EAE7BA,YAAaC,EAFgB,EAEhBA,eAErB,OACG,oCACG,yCACC8I,GAAWA,EAAQzL,KAAI,SAAAC,GAAI,OACzB,cAAC,KAAD,CAEG0L,OAAQ,6BAAK1L,EAAK0L,SAClBC,OAAQ,cAACC,GAAA,EAAD,IACRC,QAAS,4BAAI7L,EAAK6L,WAHb7L,EAAKQ,OAMdgL,EAAQ7G,OAAS,IAChB,cAAC,KAAD,CACGZ,QAAStB,EACTkB,MAAO6H,EAAQ7G,OAAS,EACxBb,SAAU,SAAA+F,GAAK,OAAInH,EAAemH,IAClCjG,iBAAiB,QEbnBkI,GAAO,WAAO,IAAD,ECTC,SAAAtL,GACzB,IAAM3D,EAAW2C,cADc,EAGPC,aAAY,SAAAC,GAAK,OAAIA,EAAMuB,QAD3C8K,EAFuB,EAEvBA,aAAcP,EAFS,EAETA,QAASL,EAFA,EAEAA,aAAcb,EAFd,EAEcA,oBAAqBC,EAFnC,EAEmCA,gBAChE5H,EAH6B,EAG7BA,WAAYlG,EAHiB,EAGjBA,MAERuP,EAAUC,uBAAY,WAC1BpP,EAAS4K,GAAYQ,gBAAgBzH,IACrC3D,EAAS4K,GAAYY,WAAW7H,IAChC3D,EAAS4K,GAAYa,gBAAgB9H,IACrC3D,EAAS4K,GAAYc,uBAAuB/H,IACvC+J,GACH1N,EAAS4K,GAAYe,wBAEtB,CAAChI,IAMJ,OAJAZ,qBAAU,WACRoM,MACC,CAACA,IAEG,CAAED,eAAcP,UAASL,eAAcb,sBAAqB3H,aAAYlG,SDR1ByP,CADlCC,cAAX7K,QACAyK,EAFgB,EAEhBA,aAAcP,EAFE,EAEFA,QAAS7I,EAFP,EAEOA,WAAYlG,EAFnB,EAEmBA,MAE3C,OAAIA,EAEA,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAgBuE,QAAjB,UACE,cAAC,KAAD,CACEoL,QAAQ,QACRjG,YAAa1J,EAAM2P,QACnB9P,KAAK,QACL+P,UAAQ,MAGZ,cAAC,EAAD,OAOJ,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAgBrL,QAAjB,UACG2B,EAAa,cAAC,KAAD,CAAM2J,KAAK,UACvB,qCACE,cAAC,GAAD,CAAiBrL,KAAM8K,IACvB,cAAC,GAAD,CAAe9K,KAAM8K,IACrB,cAAC,GAAD,CAASP,QAASA,IAClB,cAAC,GAAD,IACA,cAAC,GAAD,SAGN,cAAC,EAAD,IACA,cAAC,EAAD,QEhDOM,GAAO,kBAClB,mCACE,cAAC,GAAD,OCKSS,GAAS,kBAClB,mCACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACpJ,KAAM/E,EAAKC,KAAxB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOkO,OAAK,EAACpJ,KAAM/E,EAAKE,MAAxB,SACI,cAAC,IAAD,CAAUH,GAAIC,EAAKI,kBAEvB,cAAC,IAAD,CAAO+N,OAAK,EAACpJ,KAAM/E,EAAKI,cAAxB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAO+N,OAAK,EAACpJ,KAAM/E,EAAKG,aAAxB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAO4E,KAAM/E,EAAK4C,KAAlB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOuL,OAAK,EAACpJ,KAAM/E,EAAKK,YAAYC,IAApC,SACI,cAAE,EAAF,Y,SCzBZoG,GAIAtJ,GAJAsJ,8BACAC,GAGAvJ,GAHAuJ,6BACAC,GAEAxJ,GAFAwJ,0BACAC,GACAzJ,GADAyJ,kCAGEuH,GAAe,GCPfA,GAAe,CACnBvP,KAAM,KACNyF,YAAY,EACZlG,MAAO,MCFHgQ,GAAe,CACnBV,aAAc,KACdxB,gBAAiB,KACjBiB,QAAS,GACTL,aAAc,GACdb,oBAAqB,GACrB3H,YAAY,EACZlG,MAAO,MCRHgQ,GAAe,CACjBvP,KAAM,KACNyF,YAAY,EACZlG,MAAO,MCHLgQ,GAAe,CACjB/N,YAAa,KACbiB,WAAW,EACXlD,MAAO,MCGEiQ,GAAcC,aAAgB,CAEzCnO,aJFiC,WAA8C,IAA7CkB,EAA4C,uDAApC+M,GAAoC,yCAApBnQ,EAAoB,EAApBA,KAAMI,EAAc,EAAdA,QAChE,OAAQJ,GACN,KAAKb,EAAMuG,6BACT,OAAO,2BACFtC,GADL,IAEEiD,YAAY,IAEhB,KAAKlH,EAAMwG,4BACT,OAAO,2BACFvC,GADL,IAEEiD,YAAY,IAEhB,KAAKlH,EAAM0G,iCACT,OAAO,2BACFzC,GADL,IAEEjD,MAAOC,EACPQ,KAAM,OAEV,KAAKzB,EAAMyG,mBACT,OAAO,2BACFxC,GADL,IAEExC,KAAMR,EACND,MAAO,OAGX,QACE,OAAOiD,IIvBXuB,KHEyB,WAA8C,IAA7CvB,EAA4C,uDAApC+M,GAAoC,yCAApBnQ,EAAoB,EAApBA,KAAMI,EAAc,EAAdA,QACxD,OAAQJ,GACN,KAAKb,GAAMkL,eACT,OAAO,2BACFjH,GADL,IAEEiD,YAAY,IAEhB,KAAKlH,GAAMmL,cACT,OAAO,2BACFlH,GADL,IAEEiD,YAAY,IAEhB,KAAKlH,GAAMyL,mBACT,OAAO,2BACFxH,GADL,IAEEjD,MAAOC,EACPqP,aAAc,KACdxB,gBAAiB,KACjBiB,QAAS,GACTL,aAAc,GACdb,oBAAqB,KAEzB,KAAK7O,GAAMoL,mBACT,OAAO,2BACFnH,GADL,IAEEjD,MAAO,KACPsP,aAAcrP,IAElB,KAAKjB,GAAMqL,aACT,OAAO,2BACFpH,GADL,IAEE8L,QAAQ,aAAK9O,KAEjB,KAAKjB,GAAMsL,mBACT,OAAO,2BACFrH,GADL,IAEEyL,aAAa,aAAKzO,KAEtB,KAAKjB,GAAMuL,0BACT,OAAO,2BACFtH,GADL,IAEE4K,oBAAoB,aAAK5N,KAE7B,KAAKjB,GAAMwL,uBACT,OAAO,2BACFvH,GADL,IAEE6K,gBAAiB7N,IAErB,KAAKjB,GAAM0L,WACT,OAAO,2BACFzH,GADL,IAEEqM,aAAc,KACdxB,gBAAiB,KACjBiB,QAAS,GACTL,aAAc,GACdb,oBAAqB,GACrB3H,YAAY,EACZlG,MAAO,OAGX,QACE,OAAOiD,IG9DXkG,SLD6B,WAA4C,IAA3ClG,EAA0C,uDAAlC+M,GAAkC,yCAAnBnQ,EAAmB,EAAnBA,KAAMI,EAAa,EAAbA,QACzD,OAAQJ,GACJ,KAAKyI,GACD,OAAO,2BACArF,GADP,IAEIiD,YAAY,IAGpB,KAAKqC,GACD,OAAO,2BACAtF,GADP,IAEIiD,YAAY,IAIpB,KAAKsC,GACD,OAAO,2BACAvF,GADP,IAEIxC,KAAMR,EAAQQ,KACdT,MAAO,OAGf,KAAKyI,GACD,OAAO,2BACAxF,GADP,IAEIxC,KAAM,KACNT,OAAO,IAGf,QACI,OAAOiD,IK5BjB+E,SFL6B,WAA8C,IAA7C/E,EAA4C,uDAApC+M,GAAoC,yCAApBnQ,EAAoB,EAApBA,KAAMI,EAAc,EAAdA,QAC5D,OAAQJ,GACN,KAAKb,EAAMuI,yBACT,OAAO,2BACFtE,GADL,IAEEiD,YAAY,IAEhB,KAAKlH,EAAMwI,wBACT,OAAO,2BACFvE,GADL,IAEEiD,YAAY,IAEhB,KAAKlH,EAAM0I,6BACT,OAAO,2BACFzE,GADL,IAEEjD,MAAOC,EACPQ,KAAM,OAEV,KAAKzB,EAAMyI,eACT,OAAO,2BACFxE,GADL,IAEExC,KAAMR,EACND,MAAO,OAGX,QACE,OAAOiD,IEpBXhB,YDNgC,WAA4C,IAA3CgB,EAA0C,uDAAlC+M,GAAkC,yCAAnBnQ,EAAmB,EAAnBA,KAAMI,EAAa,EAAbA,QAE5D,OAAQJ,GAEJ,KAAKb,EAAMG,4BACP,OAAO,2BACA8D,GADP,IAEIC,WAAW,IAKnB,KAAKlE,EAAMK,4BACP,OAAO,2BACA4D,GADP,IAEIC,WAAW,EAEXlD,MAAOC,IAIf,KAAKjB,EAAMI,2BACP,OAAO,2BACA6D,GADP,IAEIC,WAAW,IAKnB,KAAKlE,EAAMM,qBACP,OAAO,2BACA2D,GADP,IAEIhB,YAAahC,EACbD,MAAO,OAId,QACG,OAAO,eAAIiD,O,oBEzBjBkN,IAhBgBC,wBAAa,CAC/BC,UAAU,EACVC,WAAW,EACXC,OAAQ,CACJlN,MAAO,SAACmN,GACJ,OAAOA,EAAOxQ,MAAQ,YAAc,eAExCyQ,UAAW,iBAAM,WACjBD,OAAW,iBAAM,WACjBE,UAAW,iBAAM,WACjB1Q,MAAW,iBAAM,cAKR2Q,OAAOC,qCACiDC,MAEnEC,GAAa,CAACC,MCnBb,IAAMC,GAAQC,aAAYhB,GAAaE,GAAiBe,KAAe,WAAf,eAAmBJ,OCErEK,GAAM,WACjB,OACE,cAAC,IAAD,CAAUH,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAQ3K,QAASA,EAAjB,SACE,cAAC,GAAD,SCEY+K,QACW,cAA7BT,OAAOU,SAASC,UAEe,UAA7BX,OAAOU,SAASC,UAEhBX,OAAOU,SAASC,SAASC,MACvB,2DCfNC,IAAS9K,OAAO,cAAC,GAAD,IAAS+K,SAASC,eAAe,SDgI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.8d20e0c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__2E8Ci\",\"logo\":\"styles_logo__2GR8d\",\"nav\":\"styles_nav__2oC4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trending_wrapper\":\"styles_trending_wrapper__2O-hh\",\"h1\":\"styles_h1__8AHTc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back-to-top\":\"styles_back-to-top__1_4V_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"styles_section__3D0zX\"};","export const types = Object.freeze({\n    LATEST_FILMS_START_FETCHING: 'LATEST_FILMS_START_FETCHING',\n    LATEST_FILMS_STOP_FETCHING:  'LATEST_FILMS_STOP_FETCHING',\n    LATEST_FILMS_FETCHING_ERROR: 'LATEST_FILMS_STOP_FETCHING',\n    LATEST_FILMS_FILLING:        'LATEST_FILMS_FILLING',\n\n});","import { root } from './config';\n\nexport const api = Object.freeze({\n        getLatestFilms: () => {\n            return fetch(`${root}/latest-movie`, {\n                method: \"GET\",\n            });\n        },\n});\n\n//root = 'https://lab.lectrum.io/rtx/api/movies';\n///movies/latest-moviemovies/","export const root = 'https://lab.lectrum.io/rtx/api/movies';","import { types } from './types';\nimport { api } from './api/index';\n\nexport const latestFilmsActions = Object.freeze({\n\n    startFetching: () => {\n        return {\n            type: types.LATEST_FILMS_START_FETCHING,\n        };\n    },\n\n    stopFetching: ( ) => {\n        return {\n            type: types.LATEST_FILMS_STOP_FETCHING\n        };\n    },\n\n    setFetchingError: ( error ) => {\n        return {\n            type: types.LATEST_FILMS_FETCHING_ERROR,\n            error: true,\n            payload: error\n        };\n    },\n\n    fillLatestFilms: ( payload ) => {\n        return {\n            type: types.LATEST_FILMS_FILLING,\n            payload: payload,\n        };\n    },\n\n    fetchAsync: () => async ( dispatch ) => { //На старт, внимание, марш\n        dispatch(latestFilmsActions.startFetching( ));\n\n        const response = await api.getLatestFilms( ); //у объедка свойство = ф-я\n        //подождали\n        if ( response.status === 200 ) {\n            const { data } = await response.json();\n\n//ок\n            dispatch( latestFilmsActions.fillLatestFilms( [ data ]));\n\n        } else {\n            const error = {\n                status: response.status,\n            };\n\n            dispatch(latestFilmsActions.setFetchingError( error ));\n\n        };\n\n        dispatch(latestFilmsActions.stopFetching());\n\n    },\n});\n","import { Layout, Menu } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport Styles from './styles/index.module.scss';\nimport { book } from './../../navigation/book';\nimport { useCurrentPage } from './hooks/useCurrentPage';\n\nexport const Header = () => {\n  const [pageKey] = useCurrentPage();\n\n  return (\n    <Layout.Header className={Styles.header}>\n      <div className={Styles.logo} />\n\n      <Menu className={Styles.nav} theme=\"dark\" mode=\"horizontal\" selectedKeys={[pageKey]}>\n        <Menu.Item key=\"1\"><Link to={book.root}>Main</Link></Menu.Item>\n        <Menu.Item key=\"2\"><Link to={book.films}>Films</Link></Menu.Item>\n        <Menu.Item key=\"3\"><Link to={book.popularFilms}>Popular films</Link></Menu.Item>\n        <Menu.Item key=\"4\"><Link to={book.topRatedFilms}>Top rated films</Link></Menu.Item>\n        <Menu.Item key=\"5\"><Link to={book.latestFilms.url} >Latest film</Link></Menu.Item>\n      </Menu>\n    </Layout.Header>\n  );\n};","import { useLocation } from 'react-router-dom';\n\nexport const useCurrentPage = () => {\n  const { pathname } = useLocation();\n\n  const appPages = {\n    '/films': '2',\n    '/popular-films': '3',\n    '/top-rated-films': '4',\n    '/latest-films': '5',\n  };\n  \n  if (pathname === '/') {\n    return '1';\n  } else {\n    const ifUrlHasStash = pathname.indexOf('/', 1) !== -1 ? true : false;\n\n    if (!ifUrlHasStash) {\n      return appPages[pathname];\n    } else {\n      return appPages[`${pathname.substring(0, pathname.indexOf('/', 1))}`]\n    }\n  }\n}\n","import { Layout } from 'antd';\n\nexport const Footer = () => {\n\n  const year = new Date().getFullYear();\n\n  return (\n    <Layout.Footer style={{ textAlign: 'center' }}>films-app ©{year}</Layout.Footer>\n  );\n};\n","import { BackTop } from 'antd';\n\nimport Styles from './styles.module.scss';\n\nexport const BackToTop = () => {\n  return (\n    <BackTop>\n      <div className={Styles['back-to-top']}>UP</div>\n    </BackTop>\n  );\n};\n","import { Layout as LayoutComponent } from 'antd';\n\nimport Styles from './styles/index.module.scss';\n\nexport const Layout = (props) => {\n  return (\n    <LayoutComponent className={Styles.section}>{props.children}</LayoutComponent>\n  );\n};\n","import { Table } from 'antd';\nimport { useLatestFilms } from './hooks/useLatestFilms';\nimport \"antd/dist/antd.css\";\nimport PageHeader from \"antd/es/page-header\";\n\nimport { Layout as LayoutComponent } from \"antd\";\n\nimport { Header } from '../../components/header';\nimport { Footer } from '../../components/footer';\nimport { BackToTop } from '../../elements/backToTop';\nimport { Layout } from './../../components/layout/index';\n\nexport const LatestFilms = () => {\n\n    const {\n        isLoading,\n        latestFilms,\n        error\n    } = useLatestFilms();\n\n    if (isLoading) {\n        return <PageHeader title=\"Виконується загрузка\" />;\n    }\n\n    if (error) {\n        return <PageHeader title=\"Помилка завантаження\" />;\n    }\n    const columns = [\n        {\n            //постер\n            title: 'Постер',\n            dataIndex: 'poster_path',\n            key: 'poster_path',\n\n        },\n\n        {\n            //Название\n            title: 'Назва',\n            dataIndex: 'title',\n            key: 'title',\n            align: 'center',\n            width: '10%',\n\n        },\n\n        {\n            // дата выхода\n            title: 'Дата релізу',\n            dataIndex: 'release_date',\n            key: 'release_date',\n            align: 'center',\n            width: '10%',\n        },\n\n        {\n            //Доходность\n            title: 'Дохідність',\n            dataIndex: 'revenue',\n            key: 'revenue',\n            align: 'center',\n            width: '10%',\n        },\n\n        {\n\n            title: 'Статус',\n            dataIndex: 'status',\n            key: 'status',\n        },\n\n        {\n            //Популярность\n            title: 'Популярність',\n            dataIndex: 'popularity',\n            key: 'popularity',\n            align: 'center',\n            width: '10%',\n        },\n\n        {\n            //Короткое описание\n            title: 'Короткий опис',\n            dataIndex: 'overview',\n            key: 'overview',\n            align: 'left',\n\n        },\n\n    ];\n    //Для проверки\n    //addToData( latestFilms );\n\n    const data = latestFilms && latestFilms.map((item) => {\n\n        const overview = item.overview ? `${item.overview.substring(0, 190)}...` : <p>Немає опису для даного фільму</p>;\n        const poster_path = item.poster_path ? <img alt={item.title}\n            src={item.poster_path} width={150} /> : <p>Немає постеру для даного фільму</p>;\n        const release_date = item.release_date ? item.release_date : <p>Дата виходу не визнаячена</p>\n        return {\n            ...item,\n            key: item.id,\n            overview,\n            poster_path,\n            release_date,\n        };\n    });\n\n    const filmsTabel = latestFilms && !isLoading && (\n        <Table\n            dataSource={data}\n            columns={columns}\n            bordered\n            rowKey=\"key\"\n\n        />\n    );\n\n    return (\n        <Layout>\n            <Header />\n            <LayoutComponent.Content>\n                <PageHeader title=\"Остані фільми. Перегляньте всі новинки на українському ринку\" />\n                {filmsTabel}\n\n                <BackToTop />\n            </LayoutComponent.Content>\n\n            <Footer />\n        </Layout>\n    );\n};\n\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { latestFilmsActions } from '../actions';\n\nexport const useLatestFilms = () => {\n\n    const dispatch = useDispatch();\n    const { isLoading, error, latestFilms } = useSelector((state) => state.latestFilms);\n\n    useEffect(() => {\n        dispatch(latestFilmsActions.fetchAsync());\n    }, [dispatch]);\n\n    return {\n        isLoading,\n        error,\n        latestFilms,\n    };\n};","import { LatestFilms as ComponentLatestFilms } from '../../bus/latestFilms';\n\nexport const LatestFilms = () => {\n    return (\n        <ComponentLatestFilms />\n    );\n};\n\n//import { useLatestFilms } from '../../bus/latestFilms/hooks/useLatestFilms';","import { LatestFilms } from '../pages/latestFilms';\n\nexport const book = Object.freeze({\n    root: '/',\n    popularFilms: '/popular-films',\n    films: '/films',\n    topRatedFilms: '/top-rated-films',\n    film: '/films/:filmId',\n\n    latestFilms: {\n        url: '/latest-films',\n        component: LatestFilms,\n    },\n\n});\n","export const root = 'https://lab.lectrum.io/rtx/api/movies';\nexport const init = {\n  method: \"GET\",\n  headers: {\n    'Content-Type': 'application/json',\n  }\n};","import { root, init } from './config';\n\nexport const api = Object.freeze({\n  getMovie: {\n    fetch: filmId => {\n      return fetch(`${root}/movie-details/${filmId}`, {...init})\n    }\n  },\n  getSimilarMovies: {\n    fetch: filmId => {\n      return fetch(`${root}/${filmId}/similar`, {...init})\n    }\n  },\n  getRecommendationsMovies: {\n    fetch: filmId => {\n      return fetch(`${root}/${filmId}/recommendations`, {...init})\n    }\n  },\n  getReviewsToMovie: {\n    fetch: filmId => {\n      return fetch(`${root}/${filmId}/reviews`, {...init})\n    }\n  },\n  getPopularMovies: {\n    fetch: (page) => {\n      return fetch(`${root}/popular-movies?page=${page}`, {...init})\n    }\n  },\n  getTrendingMovies: {\n    fetch: (time) => {\n      return fetch(`${root}/trending/movie/${time}`, {...init})\n    }\n  },\n  movies: {\n    getTopRated: (page) => {\n      return fetch(`${root}/top-rated?page=${page}`, {...init})\n    }\n  }\n\n});\n","export const types = Object.freeze({\n  POPULAR_FILMS_START_FETCHING: 'POPULAR_FILMS_START_FETCHING',\n  POPULAR_FILMS_STOP_FETCHING: 'POPULAR_FILMS_STOP_FETCHING',\n  POPULAR_FILMS_FILL: 'POPULAR_FILMS_FILL',\n  POPULAR_FILMS_SET_FETCHING_ERROR: 'POPULAR_FILMS_SET_FETCHING_ERROR',\n  POPULAR_FILMS_FETCH_ASYNC: 'POPULAR_FILMS_FETCH_ASYNC',\n});\n","import {api} from '../../api';\nimport {types} from './types';\n\nexport const popularFilmsActions = Object.freeze({\n  startFetching: () => {\n    return { type: types.POPULAR_FILMS_START_FETCHING }\n  },\n  stopFetching: () => {\n    return { type: types.POPULAR_FILMS_STOP_FETCHING }\n  },\n  fill: (payload) => {\n    return { type: types.POPULAR_FILMS_FILL, payload }\n  },\n  setFetchingError: (error) => {\n    return {\n      type: types.POPULAR_FILMS_SET_FETCHING_ERROR,\n      error: true,\n      payload: error\n    }\n  },\n\n  fetchAsync: (page) => async (dispatch) => {\n    dispatch(popularFilmsActions.startFetching());\n\n    const response = await api.getPopularMovies.fetch(page);\n\n    if (response.status === 200) {\n      const { data } = await response.json();\n\n      dispatch(popularFilmsActions.fill(data));\n    } else {\n      const error = {\n        status: response.status\n      };\n\n      dispatch(popularFilmsActions.setFetchingError(error));\n    }\n    dispatch(popularFilmsActions.stopFetching());\n  }\n});\n","import { useState } from 'react';\nimport { usePopularFilmsFetch } from './usePopularFilmsFetch';\n\nexport const usePopularFilms = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const { data } = usePopularFilmsFetch(currentPage);  // isFetching, error — Work In Progress\n\n  const _setCurrentPage = (page) => {\n    if (page > 0 && page <= 100) { setCurrentPage(page); }\n  };\n\n  return { data, currentPage, _setCurrentPage };\n}\n","import {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {popularFilmsActions} from '../actions';\n\nexport const usePopularFilmsFetch = (page) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(popularFilmsActions.fetchAsync(page));\n  }, [dispatch, page]);\n\n  const { data, isFetching, error } = useSelector((state) => state.popularFilms);\n\n  return { data, isFetching, error }\n};\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","import { Link } from 'react-router-dom';\n\n\nexport const LinkToFilm = ({id, filmName}) => {\n  return (\n    <Link to={`/films/${id}`}>{filmName}</Link>\n  );\n};","import { Table, Layout as LayoutComponent, Image, PageHeader } from 'antd';\n\nimport \"antd/dist/antd.css\";\nimport { usePopularFilms } from './hooks/usePopularFilms';\n\nimport { Header } from '../../components/header';\nimport { Footer } from '../../components/footer';\nimport { BackToTop } from '../../elements/backToTop';\nimport { history } from './../../navigation/history';\nimport { Layout } from './../../components/layout/index';\nimport { LinkToFilm } from '../../elements/linkToFilm';\n\nexport const PopularFilms = () => {\n  const { data, currentPage, _setCurrentPage } = usePopularFilms();\n\n  const columns = [\n    {\n      title: 'Poster',\n      dataIndex: 'poster_path',\n      align: 'center',\n      render: path => <Image src={path} alt=\"Poster\" width={150} />,\n    },\n    {\n      title: 'Title',\n      dataIndex: 'title',\n      align: 'center',\n      width: '20%',\n      render: (text, record) => <LinkToFilm id={record.id} filmName={text} />\n    },\n    {\n      title: 'Popularity',\n      dataIndex: 'popularity',\n      align: 'center',\n      width: '10%',\n    },\n    {\n      title: 'Vote count',\n      dataIndex: 'vote_count',\n      align: 'center',\n      width: '8%',\n    },\n    {\n      title: 'Vote average',\n      dataIndex: 'vote_average',\n      align: 'center',\n      width: '8%',\n    },\n    {\n      title: 'Overview',\n      dataIndex: 'overview',\n      align: 'center',\n    },\n  ];\n\n  const onChange = (pagination) => {\n    if (currentPage !== pagination.current) { _setCurrentPage(pagination.current) }\n  };\n\n  return (\n    <Layout>\n\n      <Header />\n\n      <LayoutComponent.Content>\n        <Table\n          columns={columns}\n          dataSource={data}\n          pagination={{\n            position: [\"bottomCenter\"],\n            pageSize: 20,\n            defaultCurrent: 1,\n            total: 2000,\n            showSizeChanger: false,\n            showQuickJumper: true\n          }}\n          onChange={onChange}\n          title={() => (\n            <PageHeader\n              className=\"site-page-header\"\n              title=\"Popular films\"\n            />)\n          }\n          bordered\n          rowKey=\"id\"\n        />\n        <BackToTop />\n      </LayoutComponent.Content>\n\n      <Footer />\n\n    </Layout>\n  );\n};\n","import { PopularFilms as PopularFilmsComponent } from '../../bus/popularFilms';\n\nexport const PopularFilms = () => (\n  <>\n    <PopularFilmsComponent />\n  </>\n);\n","export const types = Object.freeze({\n  TOP_RATED_START_FETCHING: 'TOP_RATED_START_FETCHING',\n  TOP_RATED_STOP_FETCHING: 'TOP_RATED_STOP_FETCHING',\n  TOP_RATED_FILL: 'TOP_RATED_FILL',\n  TOP_RATED_SET_FETCHING_ERROR: 'TOP_RATED_SET_FETCHING_ERROR'\n});\n","import {api} from '../../api';\nimport {types} from './types';\n\nexport const topRatedMoviesActions = Object.freeze({\n  startFetching: () => {\n    return {\n      type: types.TOP_RATED_START_FETCHING\n    }\n  },\n  stopFetching: () => {\n    return {\n      type: types.TOP_RATED_STOP_FETCHING\n    }\n  },\n  fillData: (payload) => {\n    return {\n      type: types.TOP_RATED_FILL,\n      payload\n    }\n  },\n  setFetchingError: (error) => {\n    return {\n      type: types.TOP_RATED_SET_FETCHING_ERROR,\n      error: true,\n      payload: error\n    }\n  },\n\n  getTopRatedAsync: (data) => async (dispatch) => {\n    dispatch(topRatedMoviesActions.startFetching());\n\n    const response = await api.movies.getTopRated(data);\n\n    if (response.status !== 200) {\n      dispatch(topRatedMoviesActions.setFetchingError(response.status));\n      dispatch(topRatedMoviesActions.stopFetching());\n      return\n    }\n\n    const {data: dataFromApi} = await response.json();\n\n    dispatch(topRatedMoviesActions.fillData(dataFromApi));\n    dispatch(topRatedMoviesActions.stopFetching());\n  }\n});\n","import { Link } from 'react-router-dom';\nimport { Table, Image } from 'antd';\nimport \"antd/dist/antd.css\";\nimport { useTopRatedFilms } from './customHooks/useTopRatedFilms';\nimport PageHeader from \"antd/es/page-header\";\n\n\nimport { Layout as LayoutComponent } from \"antd\";\n\nimport { Header } from '../../components/header';\nimport { Footer } from '../../components/footer';\nimport { BackToTop } from '../../elements/backToTop';\nimport { Layout } from './../../components/layout/index';\n\nexport const TopRatedFilms = () => {\n  const { data, isFetching, error, currentPage, setCurrentPage } = useTopRatedFilms();\n\n  if (isFetching) {\n    return <PageHeader title=\"Загрузка\" />;\n  }\n\n  if (error) {\n    return <PageHeader title=\"Ошибка\" />;\n  }\n\n  if (!data?.length) {\n    return <PageHeader title=\"Что-то пошло не так...\" />\n  }\n\n  const columns = [\n    {\n      title: 'Постер',\n      dataIndex: 'poster_path',\n      align: 'center',\n      render: imgSrc => <Image src={imgSrc} alt=\"image\" />,\n    },\n    {\n      title: 'Название',\n      dataIndex: 'title, id',\n      width: '20%',\n      align: 'center',\n      render: (index, item) => <Link to={`/films/${item.id}`}>{item.title}</Link>\n    },\n    {\n      title: 'Дата релиза',\n      dataIndex: 'release_date',\n      width: '8%',\n      align: 'center'\n    },\n    {\n      title: 'Количество проголосовавших людей',\n      dataIndex: 'vote_count',\n      width: '5%',\n      align: 'center'\n    },\n    {\n      title: 'Средняя оценка',\n      dataIndex: 'vote_average',\n      width: '5%',\n      align: 'center'\n    },\n    {\n      title: 'Короткое описание',\n      dataIndex: 'overview',\n    },\n    {\n      title: 'Жанры под которые попадает фильм',\n      dataIndex: 'genres',\n      render: genres => genres.map((item, index) => {\n        return <p key={index}>{item}</p>;\n      })\n    },\n  ];\n\n  return (\n    <Layout>\n      <Header />\n      <LayoutComponent.Content>\n        <Table\n          onChange={(pagination) => setCurrentPage(pagination.current)}\n          columns={columns}\n          dataSource={data}\n          bordered\n          rowKey=\"id\"\n          pagination={{\n            current: currentPage,\n            defaultCurrent: 1,\n            pageSize: 20,\n            showSizeChanger: false,\n            total: 2000\n          }}\n        />\n        <BackToTop />\n      </LayoutComponent.Content>\n\n      <Footer />\n    </Layout>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { topRatedMoviesActions } from \"../actions\";\n\nexport const useTopRatedFilms = () => {\n  const dispatch = useDispatch();\n\n  const { data, isFetching, error } = useSelector((state) => state.topRated);\n\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    dispatch(topRatedMoviesActions.getTopRatedAsync(currentPage));\n  }, [dispatch, currentPage]);\n\n  return { data, isFetching, error, currentPage, setCurrentPage };\n};\n","import { TopRatedFilms as TopRatedFilmsComponent } from \"../../bus/topRatedFilms\";\n\nexport const TopRatedFilms = () => (\n  <>\n    <TopRatedFilmsComponent />\n  </>\n);\n","export const types = Object.freeze({\n    TRENDING_FILMS_START_FETCHING: 'TRENDING_FILMS_START_FETCHING',\n    TRENDING_FILMS_STOP_FETCHING: 'TRENDING_FILMS_STOP_FETCHING',\n    TRENDING_FILMS_FILL_STATE: 'TRENDING_FILMS_FILL_STATE',\n    TRENDING_FILMS_SET_FETCHING_ERROR: 'TRENDING_FILMS_SET_FETCHING_ERROR',\n    TRENDING_FILMS_FETCH_ASYNC: 'TRENDING_FILMS_FETCH_ASYNC'\n});","import {types} from \"./types\";\nimport {api} from \"../../../api\";\n\nconst {\n    TRENDING_FILMS_START_FETCHING,\n    TRENDING_FILMS_STOP_FETCHING,\n    TRENDING_FILMS_FILL_STATE,\n    TRENDING_FILMS_SET_FETCHING_ERROR\n} = types;\n\nexport const mainActions = Object.freeze({\n    startFetching: () => {\n       return {\n           type: TRENDING_FILMS_START_FETCHING\n       }\n    },\n    stopFetching: () => {\n        return {\n            type: TRENDING_FILMS_STOP_FETCHING\n        }\n    },\n    fillState: payload => {\n        return {\n            type: TRENDING_FILMS_FILL_STATE,\n            payload\n        }\n    },\n    setFetchingError: error => {\n        return {\n            type: TRENDING_FILMS_SET_FETCHING_ERROR,\n            error: true,\n            payload: error\n        }\n    },\n    fetchAsync: (time) => async (dispatch) => {\n\n        dispatch(mainActions.startFetching);\n        const response = await api.getTrendingMovies.fetch(time);\n        if(response.status === 200){\n            const data = await response.json();\n            dispatch(mainActions.fillState(data));\n        }else {\n            const error = `Error ${response.status} = ${response.statusText}`;\n            dispatch(mainActions.setFetchingError(error))\n        }\n        dispatch(mainActions.stopFetching());\n    }\n});\n\n","import 'antd/dist/antd.css';\nimport Styles from './styles/styles.module.scss'\nimport { useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { mainActions } from './redux/actions';\nimport { Card, Tabs, Layout as LayoutComponent } from \"antd\";\nimport { Header } from '../../components/header';\nimport { Footer } from '../../components/footer';\nimport { BackToTop } from '../../elements/backToTop';\nimport { Layout } from './../../components/layout/index';\n\nconst { TabPane } = Tabs;\nconst { Meta } = Card;\n\nexport const Main = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(mainActions.fetchAsync('day'));\n  }, [dispatch]);\n\n  const trending = useSelector(state => state.trending).data;\n  const renderTrending = trending => {\n    if (Array.isArray(trending)) {\n      return (\n        <div className={Styles.trending_wrapper}>\n          {trending.map((film, index) => {\n            return (\n              <Link key={`film_${index}`} to={`/films/${film?.id}`}>\n                <Card\n                  title={film.title}\n                  hoverable\n                  style={{ width: 200 }}\n                  cover={<img alt=\"poster\"\n                    src={film.poster_path} />}\n                >\n                  <Meta title={film.overview} description={film.release_year}\n                    style={{ overflow: \"scroll\" }} />\n                </Card>\n              </Link>\n            )\n          })}\n        </div>\n      )\n\n    }\n  };\n  const handlerOnTabClick = (key) => {\n    dispatch(mainActions.fetchAsync(key));\n  };\n\n  return (\n    <Layout>\n      <Header />\n\n      <LayoutComponent.Content>\n        <h1 className={Styles.h1}>TRENDING MOVIES</h1>\n        <Tabs defaultActiveKey=\"day\" centered onTabClick={handlerOnTabClick}>\n          <TabPane tab=\"За сегодня\" key=\"day\">\n            {renderTrending(trending)}\n          </TabPane>\n          <TabPane tab=\"За неделю\" key=\"week\">\n            {renderTrending(trending)}\n          </TabPane>\n        </Tabs>\n\n        <BackToTop />\n      </LayoutComponent.Content>\n\n      <Footer />\n    </Layout>\n  )\n};\n","import {Main as MainComponent} from \"../../bus/main\";\n\nexport const Main = () => (\n    <MainComponent/>\n);\n","export const types = Object.freeze({\n  // Sync\n  START_FETCHING: '[FILM] - START_FETCHING',\n  STOP_FETCHING: '[FILM] - STOP_FETCHING',\n  SELECTED_FILM_FILL: '[FILM] - SELECTED_FILM_FILL',\n  REVIEWS_FILL: '[FILM] - REVIEWS_FILL',\n  SIMILAR_FILMS_FILL: '[FILM] - SIMILAR_FILMS_FILL',\n  RECOMMENDATION_FILMS_FILL: '[FILM] - RECOMMENDATION_FILMS_FILL',\n  MOST_POPULAR_FILM_FILL: '[FILM] - MOST_POPULAR_FILM_FILL',\n  SET_FETCHING_ERROR: '[FILM] - SET_FETCHING_ERROR',\n  FILM_CLEAN: '[FILM] - FILM_CLEAN',\n\n\n  //Async\n  GET_SELECTED_FILM: '[FILM] - GET_SELECTED_FILM',\n  GET_REVIEWS: '[FILM] - GET_REVIEWS',\n  GET_SIMILAR_FILMS: '[FILM] - GET_SIMILAR_FILMS',\n  GET_RECOMMENDATION_FILMS: '[FILM] - GET_RECOMMENDATION_FILMS',\n  GET_MOST_POPULAR_FILM: '[FILM] - GET_MOST_POPULAR_FILM',\n\n})\n","// API\nimport { api } from '../../api/index';\n\n// Types\nimport { types } from './types';\n\n\n\nexport const filmActions = Object.freeze({\n  //Sync\n  startFetching: () => ({type: types.START_FETCHING}),\n  stopFetching: () => ({type: types.STOP_FETCHING}),\n  selectedFilmFill: payload => ({type: types.SELECTED_FILM_FILL, payload}),\n  reviewsFill: payload => ({type: types.REVIEWS_FILL, payload}),\n  similarFilmsFill: payload => ({type: types.SIMILAR_FILMS_FILL, payload}),\n  recommendationFilmsFill: payload => ({type: types.RECOMMENDATION_FILMS_FILL, payload}),\n  mostPopularFilmFill: payload => ({type: types.MOST_POPULAR_FILM_FILL, payload}),\n  setFetchingError: err => ({type: types.SET_FETCHING_ERROR, error: true, payload: err}),\n  filmClean: () => ({type: types.FILM_CLEAN}),\n\n  //Async\n\n  getSelectedFilm:  id => async dispatch => {\n    try {\n      dispatch(filmActions.startFetching());\n      const res = await api.getMovie.fetch(id);\n      if(!res.ok){\n        throw new Error('Something went wrong')\n      }\n      const { data } = await res.json();\n\n      dispatch(filmActions.selectedFilmFill(data));\n\n    }catch (err){\n      dispatch(filmActions.setFetchingError(err));\n    }finally {\n      dispatch(filmActions.stopFetching());\n    }\n  },\n\n  getReviews: id => async dispatch => {\n    try {\n      dispatch(filmActions.startFetching());\n      const res = await api.getReviewsToMovie.fetch(id);\n      if(!res.ok){\n        throw new Error('Something went wrong')\n      }\n      const { data } = await res.json();\n\n      dispatch(filmActions.reviewsFill(data))\n\n    }catch (err){\n      dispatch(filmActions.setFetchingError(err));\n    }finally {\n      dispatch(filmActions.stopFetching());\n    }\n  },\n\n  getSimilarFilms:  id => async dispatch => {\n    try {\n      dispatch(filmActions.startFetching());\n      const res = await api.getSimilarMovies.fetch(id);\n      if(!res.ok){\n        throw new Error('Something went wrong')\n      }\n      const { data } = await res.json();\n\n      dispatch(filmActions.similarFilmsFill(data));\n\n    }catch (err){\n      dispatch(filmActions.setFetchingError(err));\n    }finally {\n      dispatch(filmActions.stopFetching());\n    }\n  },\n\n  getRecommendationFilms: id => async dispatch => {\n    try {\n      dispatch(filmActions.startFetching());\n      const res = await api.getRecommendationsMovies.fetch(id);\n      if(!res.ok){\n        throw new Error('Something went wrong')\n      }\n      const { data } = await res.json();\n\n      dispatch(filmActions.recommendationFilmsFill(data));\n\n    }catch (err){\n      dispatch(filmActions.setFetchingError(err));\n    }finally {\n      dispatch(filmActions.stopFetching());\n    }\n  },\n\n  getMostPopuparFilm: () => async dispatch => {\n    try {\n      dispatch(filmActions.startFetching());\n      const res = await api.getPopularMovies.fetch(1);\n\n      if(!res.ok){\n        throw new Error('Something went wrong')\n      }\n      const { data } = await res.json();\n\n      dispatch(filmActions.mostPopularFilmFill(data[0]));\n\n    }catch (err){\n      dispatch(filmActions.setFetchingError(err));\n    }finally {\n      dispatch(filmActions.stopFetching());\n    }\n  },\n\n})","import { Descriptions, Row, Col, Image } from 'antd';\n\n\nexport const FilmDescription = ({ film }) => {\n\n  const listOfGenres = film?.genres.length > 0 ? film?.genres.join('; ') : '';\n  return (\n    <>\n      <Row justify='center' align='center' >\n        <Col span={12} offset={6}>\n          <Image\n            preview={false}\n            alt={film?.title}\n            src={film?.poster_path ?? ''}\n            width={250} />\n        </Col>\n      </Row>\n\n      <Descriptions\n        labelStyle={{ 'textAlign': 'left' }}\n        title={film?.title}\n        layout='horizontal'\n        column={2} bordered>\n        <Descriptions.Item span={2} label='Genres'>{listOfGenres}</Descriptions.Item>\n        <Descriptions.Item label='Status' >{film?.status}</Descriptions.Item>\n        <Descriptions.Item label='Release Date'>{film?.release_date ?? ''}</Descriptions.Item>\n        <Descriptions.Item label='Average Score'>{film?.vote_average ?? ''}</Descriptions.Item>\n        <Descriptions.Item label='Vote Count'>{film?.vote_count ?? ''}</Descriptions.Item>\n        <Descriptions.Item span={2} label=\"Overview\">{film?.overview ?? ''}</Descriptions.Item>\n      </Descriptions>\n\n    </>\n  )\n}\n","import { Statistic, Card, Row, Col } from 'antd';\nimport { DollarOutlined, TrophyOutlined } from '@ant-design/icons'\n\n\n\nexport const FilmStatistic = ({ film }) => {\n\n  return (\n    <Row gutter={16}>\n      <Col span={8} >\n        <Card>\n          <Statistic\n            title='Popularity'\n            precision={2}\n            valueStyle={{ color: '#3F7CE1' }}\n            prefix={<TrophyOutlined />}\n            value={Number(film?.popularity).toLocaleString() || ''} />\n        </Card>\n      </Col>\n      <Col span={8} >\n        <Card>\n          <Statistic\n            title='Budget'\n            precision={0}\n            valueStyle={{ color: '#28d7b5' }}\n            prefix={<DollarOutlined />}\n            value={Number(film?.budget).toLocaleString() || ''} />\n        </Card>\n      </Col>\n      <Col span={8}>\n        <Card>\n          <Statistic\n            title='Revenue'\n            precision={0}\n            valueStyle={{ color: '#10C1BC' }}\n            prefix={<DollarOutlined />}\n            value={Number(film?.revenue).toLocaleString() || ''} />\n        </Card>\n      </Col>\n    </Row>)\n}","import { useRecommendationFilms } from '../hooks/useRecommendationFilms';\nimport { Table, Image, Rate, PageHeader } from 'antd';\nimport { Link } from 'react-router-dom';\n\n\nexport const RecommendationFilms = () => {\n  const { topRecommendationFilms } = useRecommendationFilms();\n\n  const columns = [\n    {\n      title: 'Poster',\n      dataIndex: 'poster_path',\n      align: 'center',\n      render: path => <Image src={path} alt=\"Poster\" width={100} />,\n    },\n    {\n      title: 'Title',\n      dataIndex: 'title',\n      align: 'center',\n      width: '20%',\n      render: (text, record) => <Link to={`/films/${record.id}`}>{text}</Link>\n    },\n    {\n      title: 'Popularity',\n      dataIndex: 'popularity',\n      align: 'center',\n      width: '10%',\n      render: popularity => <Rate allowHalf value={popularity} />\n    },\n    {\n      title: 'Release Date',\n      dataIndex: 'release_date',\n      align: 'center',\n      width: '10%',\n    },\n    {\n      title: 'Overview',\n      dataIndex: 'overview',\n      align: 'center',\n    },\n  ];\n\n  return (\n    <Table\n      columns={columns}\n      dataSource={topRecommendationFilms}\n      pagination={false}\n      title={() => (\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Recommendation films\"\n        />)\n      }\n      bordered\n      rowKey=\"id\"\n    />\n  )\n}","import { useSelector } from 'react-redux';\n\n\nexport const useRecommendationFilms = () => {\n  const { recommendationFilms, mostPopularFilm } = useSelector(state => state.film);\n\n  const sortRecommendationFilms = recommendationFilms.sort((a, b) => b.popularity - a.popularity);\n\n  const mostPopularity = mostPopularFilm?.popularity || sortRecommendationFilms[0]?.popularity;\n\n  const sortFilms = sortRecommendationFilms\n    .map(film => ({...film, popularity: (film?.popularity / mostPopularity) * 5}));\n\n  const topRecommendationFilms = sortFilms.length > 5 ? sortFilms.slice(0, 5) : [...sortFilms];\n\n  return { topRecommendationFilms }\n\n}","import { Link } from 'react-router-dom';\nimport Card from 'antd/lib/card';\nimport Meta from 'antd/lib/card/Meta';\nimport List from 'antd/lib/list';\nimport { useSimilarFilms } from '../hooks/useSimilarFilms'\n\n\nexport const SimilarFilms = () => {\n  const { topSimilarFilms } = useSimilarFilms();\n  return (\n    <section>\n      <h2>Similar Films</h2>\n      <List\n        grid={{ gutter: 16, column: 5 }}\n        dataSource={topSimilarFilms}\n        renderItem={item => (\n          <Link to={`/films/${item?.id}`}>\n            <List.Item>\n              <Card\n                hoverable\n                title={item.title}\n                cover={<img alt={item.title} src={item.poster_path} />}\n              >\n                <Meta description={item.overview} title={item.release_date} />\n              </Card>\n            </List.Item>\n          </Link>\n        )}\n      />\n\n    </section>)\n};\n","import { useSelector } from 'react-redux';\n\n\nexport const useSimilarFilms = () => {\n  const { similarFilms } = useSelector(state => state.film);\n\n  const sortSimilarFilms = similarFilms.sort((a, b) => b.popularity - a.popularity);\n\n  const topSimilarFilms = sortSimilarFilms.length > 5 ? sortSimilarFilms.slice(0, 5) : [...sortSimilarFilms];\n\n  return { topSimilarFilms }\n\n}","//core\nimport { Comment, Pagination } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n\n//hooks\nimport { useReviews } from './hooks/useReviews';\n\nexport const Reviews = ({ reviews }) => {\n\n   const { currentPage, setCurrentPage } = useReviews();\n\n   return (\n      <section>\n         <h2>Reviews</h2>\n         {reviews && reviews.map(item =>\n            <Comment\n               key={item.id}\n               author={<h3>{item.author}</h3>}\n               avatar={<UserOutlined />}\n               content={<p>{item.content}</p>}\n            />\n         )}\n         {(reviews.length > 10) &&\n            <Pagination\n               current={currentPage}\n               total={reviews.length - 1}\n               onChange={value => setCurrentPage(value)}\n               showSizeChanger={false}\n            />}\n      </section>\n   )\n};","//core\nimport { useState } from 'react';\n\nexport const useReviews = () => {\n\n   const [currentPage, setCurrentPage] = useState(1);\n\n\n   return {\n      currentPage,\n      setCurrentPage,\n   }\n};","import { Layout } from '../../components/layout';\nimport { Header } from '../../components/header';\nimport { Footer } from '../../components/footer';\nimport { BackToTop } from '../../elements/backToTop';\nimport { useParams } from 'react-router-dom';\nimport { Spin, Alert, Layout as LayoutComponent } from 'antd';\nimport { useInitFilm } from './hooks/useInitFilm';\nimport { FilmDescription } from './filmDescription';\nimport { FilmStatistic } from './filmStatistic';\nimport { RecommendationFilms } from './recommendationFilms';\nimport { SimilarFilms } from './similarFilms';\nimport { Reviews } from './reviews';\n\n\nexport const Film = () => {\n  const { filmId } = useParams();\n  const { selectedFilm, reviews, isFetching, error } = useInitFilm(filmId);\n\n  if (error) {\n    return (\n      <Layout>\n        <Header />\n        <LayoutComponent.Content>\n          <Alert\n            message=\"Error\"\n            description={error.message}\n            type=\"error\"\n            closable\n          />\n        </LayoutComponent.Content>\n        <Footer />\n      </Layout>\n    )\n  }\n\n\n  return (\n    <Layout>\n      <Header />\n      <LayoutComponent.Content>\n        {isFetching ? <Spin size='large' /> :\n          <>\n            <FilmDescription film={selectedFilm} />\n            <FilmStatistic film={selectedFilm} />\n            <Reviews reviews={reviews} />\n            <SimilarFilms />\n            <RecommendationFilms />\n          </>}\n      </LayoutComponent.Content>\n      <BackToTop />\n      <Footer />\n    </Layout>\n  )\n}\n  ;\n","import { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filmActions } from '../actions';\n\n\nexport const useInitFilm = id => {\n  const dispatch = useDispatch();\n  const { selectedFilm, reviews, similarFilms, recommendationFilms, mostPopularFilm,\n    isFetching, error } = useSelector(state => state.film);\n\n  const getData = useCallback(() => {\n    dispatch(filmActions.getSelectedFilm(id));\n    dispatch(filmActions.getReviews(id));\n    dispatch(filmActions.getSimilarFilms(id));\n    dispatch(filmActions.getRecommendationFilms(id));\n    if (!mostPopularFilm) {\n      dispatch(filmActions.getMostPopuparFilm());\n    }\n  }, [id]);\n\n  useEffect(() => {\n    getData()\n  }, [getData]);\n\n  return { selectedFilm, reviews, similarFilms, recommendationFilms, isFetching, error }\n}","import { Film as FilmComponent } from '../../bus/film';\n\nexport const Film = () => (\n  <>\n    <FilmComponent />\n  </>\n);\n","import { Switch, Route, Redirect } from 'react-router-dom';\nimport { book } from './book';\nimport { PopularFilms } from '../pages/popular-films';\nimport { TopRatedFilms } from '../pages/topRatedFilms';\nimport { Main } from '../pages/main';\nimport { Film } from '../pages/film';\n\nimport { LatestFilms } from '../pages/latestFilms/';\n\nexport const Routes = () => (\n    <>\n        <Switch>\n            <Route exact path={book.root}>\n                <Main />\n            </Route>\n            <Route exact path={book.films}>\n                <Redirect to={book.topRatedFilms} />\n            </Route>\n            <Route exact path={book.topRatedFilms}>\n                <TopRatedFilms />\n            </Route>\n            <Route exact path={book.popularFilms}>\n                <PopularFilms />\n            </Route>\n            <Route path={book.film}>\n                <Film />\n            </Route>\n            <Route exact path={book.latestFilms.url} >\n                < LatestFilms />\n            </Route>\n\n        </Switch>\n    </>\n);\n\n","import {types} from \"./types\";\n\nconst {\n    TRENDING_FILMS_START_FETCHING,\n    TRENDING_FILMS_STOP_FETCHING,\n    TRENDING_FILMS_FILL_STATE,\n    TRENDING_FILMS_SET_FETCHING_ERROR,\n} = types;\n\nconst initialState = {};\n\nexport const trendingReducer = (state = initialState, {type, payload}) => {\n    switch (type) {\n        case TRENDING_FILMS_START_FETCHING: {\n            return {\n                ...state,\n                isFetching: true\n            }\n        }\n        case TRENDING_FILMS_STOP_FETCHING: {\n            return {\n                ...state,\n                isFetching: false\n            }\n\n        }\n        case TRENDING_FILMS_FILL_STATE: {\n            return {\n                ...state,\n                data: payload.data,\n                error: null\n            }\n        }\n        case TRENDING_FILMS_SET_FETCHING_ERROR: {\n            return {\n                ...state,\n                data: null,\n                error: true\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n};","import {types} from './types';\n\nconst initialState = {\n  data: null,\n  isFetching: false,\n  error: null,\n};\n\nexport const popularFilmsReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case types.POPULAR_FILMS_START_FETCHING:\n      return {\n        ...state,\n        isFetching: true\n      };\n    case types.POPULAR_FILMS_STOP_FETCHING:\n      return {\n        ...state,\n        isFetching: false\n      };\n    case types.POPULAR_FILMS_SET_FETCHING_ERROR:\n      return {\n        ...state,\n        error: payload,\n        data: null,\n      };\n    case types.POPULAR_FILMS_FILL:\n      return {\n        ...state,\n        data: payload,\n        error: null,\n      };\n\n    default:\n      return state\n  }\n};\n","// Types\nimport { types } from './types';\n\nconst initialState = {\n  selectedFilm: null,\n  mostPopularFilm: null,\n  reviews: [],\n  similarFilms: [],\n  recommendationFilms: [],\n  isFetching: false,\n  error: null,\n};\n\nexport const filmReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case types.START_FETCHING:\n      return {\n        ...state,\n        isFetching: true\n      };\n    case types.STOP_FETCHING:\n      return {\n        ...state,\n        isFetching: false\n      };\n    case types.SET_FETCHING_ERROR:\n      return {\n        ...state,\n        error: payload,\n        selectedFilm: null,\n        mostPopularFilm: null,\n        reviews: [],\n        similarFilms: [],\n        recommendationFilms: [],\n      };\n    case types.SELECTED_FILM_FILL:\n      return {\n        ...state,\n        error: null,\n        selectedFilm: payload,\n      };\n    case types.REVIEWS_FILL:\n      return {\n        ...state,\n        reviews: [...payload],\n      };\n    case types.SIMILAR_FILMS_FILL:\n      return {\n        ...state,\n        similarFilms: [...payload],\n      };\n    case types.RECOMMENDATION_FILMS_FILL:\n      return {\n        ...state,\n        recommendationFilms: [...payload],\n      };\n    case types.MOST_POPULAR_FILM_FILL:\n      return {\n        ...state,\n        mostPopularFilm: payload,\n      };\n    case types.FILM_CLEAN:\n      return {\n        ...state,\n        selectedFilm: null,\n        mostPopularFilm: null,\n        reviews: [],\n        similarFilms: [],\n        recommendationFilms: [],\n        isFetching: false,\n        error: null\n      };\n\n    default:\n      return state\n  }\n}","import {types} from './types';\n\nconst initialState = {\n    data: null,\n    isFetching: false,\n    error: null,\n};\n\nexport const topRatedReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case types.TOP_RATED_START_FETCHING:\n      return {\n        ...state,\n        isFetching: true\n      };\n    case types.TOP_RATED_STOP_FETCHING:\n      return {\n        ...state,\n        isFetching: false\n      };\n    case types.TOP_RATED_SET_FETCHING_ERROR:\n      return {\n        ...state,\n        error: payload,\n        data: null,\n      };\n    case types.TOP_RATED_FILL:\n      return {\n        ...state,\n        data: payload,\n        error: null,\n      };\n\n    default:\n      return state\n  }\n};\n","import {types} from \"./types\";\n\nconst initialState = {\n    latestFilms: null,\n    isLoading: false,\n    error: null,\n}\n\nexport const latestFilmsReducer = (state = initialState, {type, payload}) => {\n\n    switch (type) {\n\n        case types.LATEST_FILMS_START_FETCHING: {\n            return {\n                ...state,\n                isLoading: true,\n                //latestFilms: null,\n            }\n        }\n\n        case types.LATEST_FILMS_FETCHING_ERROR: {\n            return {\n                ...state,\n                isLoading: false,\n                //latestFilms: null,\n                error: payload,\n            }\n        }\n\n        case types.LATEST_FILMS_STOP_FETCHING: {\n            return {\n                ...state,\n                isLoading: false,\n                //error: null,\n            }\n        }\n\n        case types.LATEST_FILMS_FILLING: {\n            return {\n                ...state,\n                latestFilms: payload,\n                error: null,\n            }\n        }\n\n         default:\n            return {...state};\n    };\n};","import {combineReducers} from 'redux';\n\nimport {trendingReducer as trending} from '../bus/main/redux/reducer';\nimport {popularFilmsReducer as popularFilms} from '../bus/popularFilms/reducer';\nimport { filmReducer as film } from '../bus/film/reducer';\nimport { topRatedReducer as topRated } from '../bus/topRatedFilms/reducer';\nimport {latestFilmsReducer as latestFilms} from '../bus/latestFilms/reducer';\n\nexport const rootReducer = combineReducers({\n\n  popularFilms,\n  film,\n  trending,\n  topRated,\n  latestFilms\n});\n","// Core\nimport { compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nexport const logger = createLogger({\n    duration: true,\n    collapsed: true,\n    colors: {\n        title: (action) => {\n            return action.error ? 'firebrick' : 'deepskyblue';\n        },\n        prevState: () => '#1C5FAF',\n        action:    () => '#149945',\n        nextState: () => '#A47104',\n        error:     () => '#ff0005',\n    }\n});\n\nconst developmentEnvironment = process.env.NODE_ENV === 'development';\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnhancers = developmentEnvironment && devtools ? devtools : compose;\n\nconst middleware = [thunk];\n\nif (developmentEnvironment) {\n    middleware.push(logger);\n}\n\nexport { composeEnhancers, middleware };","import {createStore, applyMiddleware} from 'redux';\nimport {rootReducer} from './rootReducer';\nimport {composeEnhancers, middleware} from './middleware';\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middleware)));\n","import { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { Routes } from './source/navigation';\nimport { history } from './source/navigation/history';\nimport { store } from './source/init/store';\n\nexport const App = () => {\n  return (\n    <Provider store={store}>\n      <Router history={history}>\n        <Routes />\n      </Router>\n    </Provider>\n  )\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker auth:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './app';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}